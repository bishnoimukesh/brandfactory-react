{"ast":null,"code":"const addToCartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return { ...state,\n        cart: [...state.cart, { ...action.payload,\n          quantity: 1\n        }]\n      };\n\n    case \"REMOVE_FROM_CART\":\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.id)\n      };\n\n    case \"INCREASE_COUNT\":\n      return { ...state,\n        cart: state.cart.map(item => {\n          if (item.id === action.payload.id) {\n            return { ...item,\n              quantity: item.quantity + 1\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case \"DECREASE_COUNT\":\n      return { ...state,\n        cart: state.cart.map(item => {\n          if (item.id === action.payload.id) {\n            return { ...item,\n              quantity: item.quantity - 1\n            };\n          }\n\n          return item;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getDataReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_DATA\":\n      return { ...state,\n        products: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { addToCartReducer, getDataReducer };","map":{"version":3,"sources":["/Users/mukesh/Documents/GitHub/react/brand-factory-react/src/Reducer/addToCartReducer.jsx"],"names":["addToCartReducer","state","action","type","cart","payload","quantity","filter","item","id","map","getDataReducer","products"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACG,IAAV,EAAgB,EAAC,GAAGF,MAAM,CAACG,OAAX;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SAAhB;AAFH,OAAP;;AAIJ,SAAK,kBAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHG,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWG,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAArD;AAFH,OAAP;;AAIJ,SAAK,gBAAL;AACI,aAAO,EACH,GAAGR,KADA;AAEHG,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWM,GAAX,CAAeF,IAAI,IAAI;AACzB,cAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA/B,EAAmC;AAC/B,mBAAO,EAAC,GAAGD,IAAJ;AAAUF,cAAAA,QAAQ,EAAEE,IAAI,CAACF,QAAL,GAAgB;AAApC,aAAP;AACH;;AACD,iBAAOE,IAAP;AACH,SALK;AAFH,OAAP;;AASJ,SAAK,gBAAL;AACI,aAAO,EACH,GAAGP,KADA;AAEHG,QAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,CAAWM,GAAX,CAAeF,IAAI,IAAI;AACzB,cAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA/B,EAAmC;AAC/B,mBAAO,EAAC,GAAGD,IAAJ;AAAUF,cAAAA,QAAQ,EAAEE,IAAI,CAACF,QAAL,GAAgB;AAApC,aAAP;AACH;;AACD,iBAAOE,IAAP;AACH,SALK;AAFH,OAAP;;AASJ;AACI,aAAOP,KAAP;AAhCR;AAkCH,CAnCD;;AAqCA,MAAMU,cAAc,GAAG,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHW,QAAAA,QAAQ,EAAEV,MAAM,CAACG;AAFd,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAPR;AASH,CAVD;;AAYA,SAASD,gBAAT,EAA2BW,cAA3B","sourcesContent":["const addToCartReducer = (state, action) => {    \n    switch (action.type) {\n        case \"ADD_TO_CART\":\n            return {\n                ...state,\n                cart: [...state.cart, {...action.payload, quantity: 1}]\n            };\n        case \"REMOVE_FROM_CART\":\n            return {\n                ...state,\n                cart: state.cart.filter(item => item.id !== action.payload.id)\n            };\n        case \"INCREASE_COUNT\":\n            return {\n                ...state,\n                cart: state.cart.map(item => {\n                    if (item.id === action.payload.id) {\n                        return {...item, quantity: item.quantity + 1};\n                    }\n                    return item;\n                })\n            };\n        case \"DECREASE_COUNT\":\n            return {\n                ...state,\n                cart: state.cart.map(item => {\n                    if (item.id === action.payload.id) {\n                        return {...item, quantity: item.quantity - 1};\n                    }\n                    return item;\n                })\n            };\n        default:\n            return state;\n    }\n}\n\nconst getDataReducer = (state, action) => {\n    switch (action.type) {\n        case \"GET_DATA\":\n            return {\n                ...state,\n                products: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport { addToCartReducer, getDataReducer };"]},"metadata":{},"sourceType":"module"}